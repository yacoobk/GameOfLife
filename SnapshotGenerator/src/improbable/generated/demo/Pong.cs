// Generated by SpatialOS codegen. DO NOT EDIT!
// source: demo.Pong in demo.schema.

namespace Demo
{

public partial struct Pong : global::System.IEquatable<Pong>, global::Improbable.Collections.IDeepCopyable<Pong>
{
  /// <summary>
  /// Field worker_type = 1.
  /// </summary>
  public string workerType;
  /// <summary>
  /// Field worker_message = 2.
  /// </summary>
  public string workerMessage;

  public Pong(
      string workerType,
      string workerMessage)
  {
    this.workerType = workerType;
    this.workerMessage = workerMessage;
  }

  public static Pong Create()
  {
    var _result = new Pong();
    _result.workerType = "";
    _result.workerMessage = "";
    return _result;
  }

  public Pong DeepCopy()
  {
    var _result = new Pong();
    _result.workerType = workerType;
    _result.workerMessage = workerMessage;
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is Pong && Equals((Pong) _obj);
  }

  public static bool operator==(Pong a, Pong b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(Pong a, Pong b)
  {
    return !a.Equals(b);
  }

  public bool Equals(Pong _obj)
  {
    return
        workerType == _obj.workerType &&
        workerMessage == _obj.workerMessage;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + (workerType == null ? 0 : workerType.GetHashCode());
    _result = (_result * 977) + (workerMessage == null ? 0 : workerMessage.GetHashCode());
    return _result;
  }
}

public static class Pong_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.GcHandlePool _pool,
                                  Pong _data, global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    {
      if (_data.workerType != null)
      {
        var _buffer = global::System.Text.Encoding.UTF8.GetBytes(_data.workerType);
        global::Improbable.Worker.Internal.Pbio.AddBytes(_obj, 1, (byte*) _pool.Pin(_buffer), (uint) _buffer.Length);
      }
      else{
        global::Improbable.Worker.Internal.Pbio.AddBytes(_obj, 1, null, 0);
      }
    }
    {
      if (_data.workerMessage != null)
      {
        var _buffer = global::System.Text.Encoding.UTF8.GetBytes(_data.workerMessage);
        global::Improbable.Worker.Internal.Pbio.AddBytes(_obj, 2, (byte*) _pool.Pin(_buffer), (uint) _buffer.Length);
      }
      else{
        global::Improbable.Worker.Internal.Pbio.AddBytes(_obj, 2, null, 0);
      }
    }
  }

  public static unsafe Pong Read(global::Improbable.Worker.Internal.Pbio.Object* _obj)
  {
    Pong _data;
    {
      _data.workerType = global::System.Text.Encoding.UTF8.GetString(global::Improbable.Worker.Bytes.CopyOf(global::Improbable.Worker.Internal.Pbio.GetBytes(_obj, 1), global::Improbable.Worker.Internal.Pbio.GetBytesLength(_obj, 1)).BackingArray);
    }
    {
      _data.workerMessage = global::System.Text.Encoding.UTF8.GetString(global::Improbable.Worker.Bytes.CopyOf(global::Improbable.Worker.Internal.Pbio.GetBytes(_obj, 2), global::Improbable.Worker.Internal.Pbio.GetBytesLength(_obj, 2)).BackingArray);
    }
    return _data;
  }
}

}
